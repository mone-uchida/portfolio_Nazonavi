version: 2.1 
orbs: 
  aws-cli: circleci/aws-cli@2.0.6
  aws-ecr: circleci/aws-ecr@7.2.0 
  aws-ecs: circleci/aws-ecs@2.2.1 

jobs: 
  rspec: 
    working_directory: ~/mysterysearch 
    docker: 
      - image: circleci/ruby:3.0.1-node-browsers
      - image: circleci/mysql:5.6
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_ROOT_HOST: 'host'
    steps: 
      - checkout 
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run:
          name: Bundler install
          command: |
            gem update --system
            gem install bundler
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - run:
          name: Database setup
          command: bin/rails db:create db:schema:load --trace
      - run: bundle exec bin/webpack
      - run:
          name: Run rubocop
          command: bundle exec rspec
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  rubocop:
    working_directory: ~/mysterysearch
    docker:
      - image: circleci/ruby:3.0.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

workflows: 
  version: 2.1 
  build-test-and-deploy: 
    jobs: 
      - rspec 
      - rubocop 
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          repo: 'portfolio'
          dockerfile: Dockerfile.ci
          tag: '${CIRCLE_SHA1}'
          requires: 
            - rspec 
            - rubocop 
      - aws-ecs/deploy-service-update:
          family: 'nazonavi' 
          service-name: 'nazonavi'
          cluster-name: 'portfolio' 
          container-image-name-updates: 'container=nazonavi,image-and-tag=${AWS_ECR_ACCOUNT_URL}/portfolio:${CIRCLE_SHA1}' 
          requires: 
            - aws-ecr/build-and-push-image
