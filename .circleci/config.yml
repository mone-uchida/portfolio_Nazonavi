version: 2.1 
orbs: 
  aws-ecr: circleci/aws-ecr@7.2.0 
  aws-ecs: circleci/aws-ecs@2.2.1 

jobs: 
  rspec: 
    working_directory: ~/mysterysearch 
    docker: 
      - image: circleci/ruby:3.0.1
    resource_class: small
    steps: 
      - checkout 
      - setup_remote_docker:
          docker_layer_caching: true
      - run: 
          name: Setup environment variable 
          command: | 
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV 
      - run: 
          name: Start containers and verify it is working 
          command: | 
            set -x 
            docker-compose up -d 
            docker exec mysterysearch curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000 
      - run: 
          name: Run rspec 
          command: docker-compose exec mysterysearch rspec 

  rubocop:
    working_directory: ~/mysterysearch
    docker:
      - image: circleci/ruby:3.0.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  build-and-push-image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "mysterysearch_app"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./backend/

workflows: 
  version: 2.1 
  build-test-and-deploy: 
    jobs: 
      - rspec 
      - rubocop 
      - build-and-push-image:
          requires: 
            - rspec 
            - rubocop 
      - aws-ecs/deploy-service-update:
          family: 'mysterysearch_app' 
          service-name: "mysterysearch_app"
          cluster-name: 'app' 
          container-image-name-updates: 'container=myapp,image-and-tag=${AWS_ECR_ACCOUNT_URL}/portfolio:${CIRCLE_SHA1}' 
          requires: 
            - build-and-push-image
